X_fit_ll_po <- fitdistr(X, "poisson")
X_fit_ll_nb <- fitdistr(X, "negative binomial")
X_fit_ll_po$loglik
reticulate::repl_python()
JuliaCall::julia_setup(JULIA_HOME = "/Applications/Julia-1.9.app/Contents/Resources/julia/bin/")
knitr::opts_chunk$set(engine.path = list(
python = "/Library/Frameworks/Python.framework/Versions/3.10/bin/python3.10",
julia = "/Applications/Julia-1.9.app/Contents/Resources/julia/bin/"
))
reticulate::repl_python()
JuliaCall::julia_setup(JULIA_HOME = "/Applications/Julia-1.9.app/Contents/Resources/julia/bin/")
knitr::opts_chunk$set(engine.path = list(
python = "/Library/Frameworks/Python.framework/Versions/3.10/bin/python3.10",
julia = "/Applications/Julia-1.9.app/Contents/Resources/julia/bin/"
))
reticulate::repl_python()
library(MASS) ## glm.nb
library(countreg)
library(pscl)
library(modelsummary)
library(boot)
df <- read.csv("../data/polish-jvs.csv", colClasses = c("character", "factor", rep("character", 4), "numeric"))
head(df)
m1 <- pscl::hurdle(formula = vacancies ~ size + public,
dist = "poisson", ## vacancies ~ zero-truncated Poisson distribution
link = "logit", ## P(Y > 0 | x) | w oneinf P(Y = 0)
data = df)
m1a <- pscl::zeroinfl(formula = vacancies ~ size + public,
dist = "poisson",
link = "logit",
data = df)
modelsummary(list("ZIP"=m1a, "HP"=m1))
BIC(m1, m1a)
reticulate::repl_python()
